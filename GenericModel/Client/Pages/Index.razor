@page "/"
@using GenericModel.Shared.Filters;
@inject HttpClient Http

<div>
    @if (filters != null)
    {
        @foreach (var filter in filters)
        {
            <div>@filter.Name</div>
            <ul>
                @foreach(var filterOption in filter.FilterOptions)
                {
                    //Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(filterOption));
                    <li>@filterOption.GetProperty("name") @filterOption.GetProperty("count"): @filterOption.GetProperty("value")</li>
                }
            </ul>
        }
    }
</div>

@code {
    private IEnumerable<Filter>? filters;

    protected override async Task OnInitializedAsync()
    {
        filters = await Http.GetFromJsonAsync<IEnumerable<Filter>>("Filter");
        //Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(filters));
    }
}
